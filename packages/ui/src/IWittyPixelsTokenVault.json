{
  "contractName": "IWittyPixelsTokenVault",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "deltaPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reservePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "roundBlocks",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startingBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startingPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IWittyPixelsTokenVaultAuctionDutch.Settings",
          "name": "settings",
          "type": "tuple"
        }
      ],
      "name": "SettingsChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SoldOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "Winner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dividend",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "afmijnen",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctioning",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimJackpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "cloneAndInitialize",
      "outputs": [
        {
          "internalType": "contract ITokenVaultWitnet",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "cloneDeterministicAndInitialize",
      "outputs": [
        {
          "internalType": "contract ITokenVaultWitnet",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getJackpotByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "text",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "getJackpotByWinner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "text",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "getJackpotsContestantsAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getJackpotsContestantsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getJackpotsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getJackpotsTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandomizeBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        }
      ],
      "name": "getRandomizeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isRandomized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isRandomizing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextPriceBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "_parentToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_parentTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomizeWinners",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomizer",
      "outputs": [
        {
          "internalType": "contract IWitnetRandomness",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "deeds",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "setDutchAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "deltaPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reservePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "roundBlocks",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startingBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startingPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IWittyPixelsTokenVaultAuctionDutch.Settings",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleWinners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "soldOut",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "withdrawableFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInfo",
      "outputs": [
        {
          "internalType": "enum IWittyPixelsTokenVault.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "redeemedPixels",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "redeemedPlayers",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalPixels",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalTransfers",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalWithdrawals",
              "type": "uint256"
            }
          ],
          "internalType": "struct IWittyPixelsTokenVault.Stats",
          "name": "stats",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "currentPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextPriceBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getPlayerInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "playerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redeemedPixels",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getWalletInfo",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "sharePercentage100",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "withdrawableFunds",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pixelsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPixels",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deltaPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reservePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IWittyPixelsTokenVaultAuctionDutch.Settings\",\"name\":\"settings\",\"type\":\"tuple\"}],\"name\":\"SettingsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SoldOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Winner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dividend\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"afmijnen\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctioning\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimJackpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"cloneAndInitialize\",\"outputs\":[{\"internalType\":\"contract ITokenVaultWitnet\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"cloneDeterministicAndInitialize\",\"outputs\":[{\"internalType\":\"contract ITokenVaultWitnet\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInfo\",\"outputs\":[{\"internalType\":\"enum IWittyPixelsTokenVault.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"redeemedPixels\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemedPlayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPixels\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTransfers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWithdrawals\",\"type\":\"uint256\"}],\"internalType\":\"struct IWittyPixelsTokenVault.Stats\",\"name\":\"stats\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"currentPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextPriceBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getJackpotByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"getJackpotByWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"getJackpotsContestantsAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getJackpotsContestantsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getJackpotsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getJackpotsTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getPlayerInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"playerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemedPixels\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomizeBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"getRandomizeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getWalletInfo\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"sharePercentage100\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableFunds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRandomized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRandomizing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPriceBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_parentToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_parentTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pixelsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomizeWinners\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomizer\",\"outputs\":[{\"internalType\":\"contract IWitnetRandomness\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deeds\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"setDutchAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deltaPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reservePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IWittyPixelsTokenVaultAuctionDutch.Settings\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soldOut\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPixels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"withdrawableFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"getInfo()\":{\"returns\":{\"currentPrice\":\"Price in ETH/wei at which the whole NFT ownership can be bought, or at which it was actually sold.\",\"nextPriceBlock\":\"A block number in the future at which the currentPrice may change. Zero, if it's not expected ever to change.    \",\"stats\":\"Set of meters reflecting number of pixels, players, ERC20 transfers and withdrawls, up to date. \",\"status\":\"Enum value representing current contract status: Awaiting, Randomizing, Auctioning, Sold\"}},\"getPlayerInfo(uint256)\":{\"returns\":{\"playerAddress\":\"Address from which the token's ownership was redeemed. Zero if this player has redeemed ownership yet.\",\"redeemedPixels\":\"Number of pixels formerly redemeed by given player. \"}},\"getWalletInfo(address)\":{\"returns\":{\"sharePercentage100\":\"NFT ownership percentage based on current ERC20 balance, multiplied by a 100.\",\"withdrawableFunds\":\"ETH/wei amount that can be potentially withdrawn from this address.\"}},\"parentToken()\":{\"details\":\"Note: the ERC-165 identifier for this interface is 0x5755c3f2.\"},\"pixelsOf(address)\":{\"details\":\"Finalized pixels can only be redeemed by actual players of the WittyPixels game during the event to which the `parentTokenId` is referred to. A value greater than 0 implies the given address was actually used by a legitimate player when redeeming ownership of the fractionalized `parentTokenId` token within the `parentToken`NFT collection.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw()\":{\"details\":\"Fails if not yet sold out. \"},\"withdrawableFrom(address)\":{\"details\":\"Returns 0 in all cases while not yet sold out. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"curator()\":{\"notice\":\"Address of the previous owner, the one that decided to fractionalized the NFT.\"},\"getInfo()\":{\"notice\":\"Returns status data about the token vault contract, relevant from an UI/UX perspective\"},\"getPlayerInfo(uint256)\":{\"notice\":\"Gets info regarding a formerly verified player, given its index. \"},\"getWalletInfo(address)\":{\"notice\":\"Gets accounting info regarding given address.\"},\"pixelsOf(address)\":{\"notice\":\"Returns sum of finalized pixels ever redeemed from the given address.\"},\"redeem(bytes)\":{\"notice\":\"Mint ERC-20 tokens, ergo token ownership, by providing ownership deeds.\"},\"soldOut()\":{\"notice\":\"Returns whether this NFT vault has already been sold out. \"},\"totalPixels()\":{\"notice\":\"Returns total number of finalized pixels within the WittyPixels canvas.\"},\"withdraw()\":{\"notice\":\"Withdraw paid value in proportion to number of shares.\"},\"withdrawableFrom(address)\":{\"notice\":\"Tells withdrawable amount in weis from given address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IWittyPixelsTokenVault.sol\":\"IWittyPixelsTokenVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/interfaces/IERC1633.sol\":{\"keccak256\":\"0x6061a974aa140b1e0da2e088337d62120dec740ea32c299345728c5673d9f74f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d64333f64be3edf0300909fac7455166d9bb5107872aed083c6d8b843b0ad2da\",\"dweb:/ipfs/QmabSqcvNXUkBpgohUvF1Fhxc6kwf8t73TvdXRED2TiWAg\"]},\"project:/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x855fa5391b7a913d82154652e1cd781a854d6025586a8fb77dcbf159d63bedfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d50f47f1ac0b9f859818e6120ea4bdcede80e10d06d5d6434dc0538d62e20c1\",\"dweb:/ipfs/Qmdm973GgbR2xy6FJ5CdnSdZGjx2o4H8ZfC9sTttcQFiLX\"]},\"project:/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xa601205851a09bd01593934872e205518fea084859aca1930f28cc678b8fd0b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd30c3685e8e6086df436bfbe803ca6775fe38043b1b0eee5e103a77a169f615\",\"dweb:/ipfs/QmP1PH7ovbiWCEotE7NyLPvPiwgCL4GWNqqidMUhxCNs6M\"]},\"project:/contracts/interfaces/ITokenVault.sol\":{\"keccak256\":\"0x93159c044231aed39bf100fb9c47a61431417b2e23dc71619ae20b56231117d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0d19f9fa309b6aff3266de2c8cab42f57db815f75a5a23731788b956a967b39\",\"dweb:/ipfs/QmdJ5Bz69gj8YHXTWZ4HDh8hGgDa7HH9GhcZ4BCKca6bVF\"]},\"project:/contracts/interfaces/ITokenVaultWitnet.sol\":{\"keccak256\":\"0xdd878f69d7026c0b6341c027ebd6508ae26fc3ea2afbe42eb820efd0e25323a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc77822a8758289d1dfd7378674cf28b60dea4dda6ee24a32687a20fdf93e3c\",\"dweb:/ipfs/QmP2N4NuYMcrsJEqe1VX9S6pC3zphbJpMT2sFmKtxNBGa3\"]},\"project:/contracts/interfaces/IWittyPixelsTokenVault.sol\":{\"keccak256\":\"0x0e033b924bcefe55b46a689ae0bbe65db7e3f1ebffb8c69e948b198dec83dfd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34363ae672874b6e3e848c11a5f934d42bda24afb1e128420e75492979e332a8\",\"dweb:/ipfs/QmTX7a17gqXhRTqzRAqKdoXnbLzkAomt8UYwtzNWCUAsAs\"]},\"project:/contracts/interfaces/IWittyPixelsTokenVaultAuctionDutch.sol\":{\"keccak256\":\"0x8e8d8e9c69f047107c354fef32186e42242a5ceed4bb9290a0099890d3ac439b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://491bc21136ae2af539fd029bcd5fceb50a6fb8ad855c663b9ab81be38770c7ff\",\"dweb:/ipfs/Qmc1DguxUuL6jYyLbAz1bBi1Yx4AzZqyDLFW4wEiz7Y2Bn\"]},\"project:/contracts/interfaces/IWittyPixelsTokenVaultJackpots.sol\":{\"keccak256\":\"0xc9b5413033cef45d7e581d3900024f28412022c4587d8ff513a5e735b4b8f5a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a98063f658b76a7298ec9967ba7dee580918598c6236cf396a8a20f47a909a22\",\"dweb:/ipfs/QmdnFtovVk2X4jafVD3UqD7XeSYZAfaXBaBbn5YZ7JhaBY\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRandomness.sol\":{\"keccak256\":\"0x50a2f1822c6c2df9a033ba82dc2026499b21ebe36bdf0b50d3b1b6488fdbf619\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df62885c9f1e44e1439f3bf353e08447a5e641927ab59fcc840f85cf2f565395\",\"dweb:/ipfs/QmfBxs2kQnkjosAZmUAZqi6BAhoBNrCVDPswgkynsv3oCv\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0x24ee320e4683bd257620562a09f869637edc02f8675a12fe1bea98d5f65c4ff7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f727846410ea09d74fd2b30165e199256924b33f2becd4af3b27701119a812f3\",\"dweb:/ipfs/QmUTnXggHHro2HJtQg5PK2ktrDYrWVihDP9keHzZH9d1sL\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x5c2de57a21deeea16bdd6a3b99f5ba31ea9306d37eb0dbf86bee9c916ba4144b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://896d5ad96a0ebcecbeb95ebb6e0589e74c39ed1370b3479f401ed856b47d4cfb\",\"dweb:/ipfs/QmcP9uSsWPVCAqu3xbmbd2KT8AKfjWXH5B8oxVDFPr9BXk\"]},\"witnet-solidity-bridge/contracts/libs/WitnetBuffer.sol\":{\"keccak256\":\"0xce4cba521800f4e7a8a10293c321b702d647a069012e79d4066388b4d9b19f3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07931cfbe0dd7094c3c5f2c4518a8d78c4826bcd628038238c682f6894285c12\",\"dweb:/ipfs/QmfNEVVySBg5wz8zdtLsaDFt2gmMLueGFE1P2enXCc4GtB\"]},\"witnet-solidity-bridge/contracts/libs/WitnetCBOR.sol\":{\"keccak256\":\"0xec8d5a1226533318668729312fa6c0dfe3951a4462212b9fe2ce7b6f5bd2a93a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc29f0cda6d98a00d06b0e47be4f7d4a3f4f79a1080b00da5245d85f6c3ba7e0\",\"dweb:/ipfs/QmXxb3wBRcGp1JuPswEgcTCbKoDCqgtieFchi5b6vZDNmM\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./ITokenVaultWitnet.sol\";\r\nimport \"./IWittyPixelsTokenVaultAuctionDutch.sol\";\r\nimport \"./IWittyPixelsTokenVaultJackpots.sol\";\r\n\r\nabstract contract IWittyPixelsTokenVault\r\n    is\r\n        ITokenVaultWitnet,\r\n        IWittyPixelsTokenVaultAuctionDutch,\r\n        IWittyPixelsTokenVaultJackpots\r\n{\r\n    constructor(address _randomizer)\r\n        ITokenVaultWitnet(_randomizer)\r\n    {}\r\n\r\n    struct Stats {\r\n        uint256 redeemedPixels;\r\n        uint256 redeemedPlayers;\r\n        uint256 totalPixels;\r\n        uint256 totalTransfers;\r\n        uint256 totalWithdrawals;\r\n    }\r\n\r\n    enum Status {\r\n        /* 0 */ Awaiting,\r\n        /* 1 */ Randomizing,\r\n        /* 2 */ Auctioning,\r\n        /* 3 */ Sold\r\n    }\r\n\r\n    /// @notice Returns status data about the token vault contract, relevant from an UI/UX perspective\r\n    /// @return status Enum value representing current contract status: Awaiting, Randomizing, Auctioning, Sold\r\n    /// @return stats Set of meters reflecting number of pixels, players, ERC20 transfers and withdrawls, up to date. \r\n    /// @return currentPrice Price in ETH/wei at which the whole NFT ownership can be bought, or at which it was actually sold.\r\n    /// @return nextPriceBlock A block number in the future at which the currentPrice may change. Zero, if it's not expected ever to change.    \r\n    function getInfo() virtual external view returns (\r\n            Status  status,\r\n            Stats memory stats,\r\n            uint256 currentPrice,\r\n            uint256 nextPriceBlock\r\n        );\r\n\r\n    /// @notice Gets info regarding a formerly verified player, given its index. \r\n    /// @return playerAddress Address from which the token's ownership was redeemed. Zero if this player has redeemed ownership yet.\r\n    /// @return redeemedPixels Number of pixels formerly redemeed by given player. \r\n    function getPlayerInfo(uint256) virtual external view returns (\r\n            address playerAddress,\r\n            uint256 redeemedPixels\r\n        );\r\n\r\n    /// @notice Gets accounting info regarding given address.\r\n    /// @return sharePercentage100 NFT ownership percentage based on current ERC20 balance, multiplied by a 100.\r\n    /// @return withdrawableFunds ETH/wei amount that can be potentially withdrawn from this address.\r\n    function getWalletInfo(address) virtual external view returns (\r\n            uint16  sharePercentage100,\r\n            uint256 withdrawableFunds\r\n        );\r\n\r\n    /// @notice Returns sum of finalized pixels ever redeemed from the given address.\r\n    /// @dev Finalized pixels can only be redeemed by actual players of the WittyPixels game during the event to which \r\n    /// @dev the `parentTokenId` is referred to. A value greater than 0 implies the given address was actually used by a \r\n    /// @dev legitimate player when redeeming ownership of the fractionalized `parentTokenId` token within the `parentToken`\r\n    /// @dev NFT collection.\r\n    function pixelsOf(address) virtual external view returns (uint256);\r\n\r\n    /// @notice Returns total number of finalized pixels within the WittyPixels canvas.\r\n    function totalPixels() virtual external view returns (uint256);   \r\n}",
  "sourcePath": "C:\\Users\\guill\\github\\otherplane\\witty-pixels-contracts\\contracts\\interfaces\\IWittyPixelsTokenVault.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IWittyPixelsTokenVault.sol",
    "exportedSymbols": {
      "IERC1633": [
        8810
      ],
      "IERC165": [
        4244
      ],
      "IERC20Upgradeable": [
        1169
      ],
      "ITokenVault": [
        8872
      ],
      "ITokenVaultWitnet": [
        9026
      ],
      "IWitnetRandomness": [
        11105
      ],
      "IWitnetRequest": [
        11121
      ],
      "IWittyPixelsTokenVault": [
        9355
      ],
      "IWittyPixelsTokenVaultAuctionDutch": [
        9405
      ],
      "IWittyPixelsTokenVaultJackpots": [
        9476
      ],
      "Witnet": [
        12079
      ],
      "WitnetBuffer": [
        13276
      ],
      "WitnetCBOR": [
        14609
      ]
    },
    "id": 9356,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9272,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:33"
      },
      {
        "absolutePath": "project:/contracts/interfaces/ITokenVaultWitnet.sol",
        "file": "./ITokenVaultWitnet.sol",
        "id": 9273,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9356,
        "sourceUnit": 9027,
        "src": "60:33:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IWittyPixelsTokenVaultAuctionDutch.sol",
        "file": "./IWittyPixelsTokenVaultAuctionDutch.sol",
        "id": 9274,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9356,
        "sourceUnit": 9406,
        "src": "95:50:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IWittyPixelsTokenVaultJackpots.sol",
        "file": "./IWittyPixelsTokenVaultJackpots.sol",
        "id": 9275,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9356,
        "sourceUnit": 9477,
        "src": "147:46:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 9276,
              "name": "ITokenVaultWitnet",
              "nameLocations": [
                "255:17:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9026,
              "src": "255:17:33"
            },
            "id": 9277,
            "nodeType": "InheritanceSpecifier",
            "src": "255:17:33"
          },
          {
            "baseName": {
              "id": 9278,
              "name": "IWittyPixelsTokenVaultAuctionDutch",
              "nameLocations": [
                "283:34:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9405,
              "src": "283:34:33"
            },
            "id": 9279,
            "nodeType": "InheritanceSpecifier",
            "src": "283:34:33"
          },
          {
            "baseName": {
              "id": 9280,
              "name": "IWittyPixelsTokenVaultJackpots",
              "nameLocations": [
                "328:30:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9476,
              "src": "328:30:33"
            },
            "id": 9281,
            "nodeType": "InheritanceSpecifier",
            "src": "328:30:33"
          }
        ],
        "canonicalName": "IWittyPixelsTokenVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 9355,
        "linearizedBaseContracts": [
          9355,
          9476,
          9405,
          9026,
          8872,
          8810,
          4244,
          1169
        ],
        "name": "IWittyPixelsTokenVault",
        "nameLocation": "215:22:33",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9289,
              "nodeType": "Block",
              "src": "445:2:33",
              "statements": []
            },
            "id": 9290,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9286,
                    "name": "_randomizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9283,
                    "src": "427:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9287,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9285,
                  "name": "ITokenVaultWitnet",
                  "nameLocations": [
                    "409:17:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9026,
                  "src": "409:17:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "409:30:33"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9283,
                  "mutability": "mutable",
                  "name": "_randomizer",
                  "nameLocation": "387:11:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9290,
                  "src": "379:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "378:21:33"
            },
            "returnParameters": {
              "id": 9288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:33"
            },
            "scope": 9355,
            "src": "367:80:33",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "IWittyPixelsTokenVault.Stats",
            "id": 9301,
            "members": [
              {
                "constant": false,
                "id": 9292,
                "mutability": "mutable",
                "name": "redeemedPixels",
                "nameLocation": "487:14:33",
                "nodeType": "VariableDeclaration",
                "scope": 9301,
                "src": "479:22:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9291,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "479:7:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9294,
                "mutability": "mutable",
                "name": "redeemedPlayers",
                "nameLocation": "520:15:33",
                "nodeType": "VariableDeclaration",
                "scope": 9301,
                "src": "512:23:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9293,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "512:7:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9296,
                "mutability": "mutable",
                "name": "totalPixels",
                "nameLocation": "554:11:33",
                "nodeType": "VariableDeclaration",
                "scope": 9301,
                "src": "546:19:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9295,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "546:7:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9298,
                "mutability": "mutable",
                "name": "totalTransfers",
                "nameLocation": "584:14:33",
                "nodeType": "VariableDeclaration",
                "scope": 9301,
                "src": "576:22:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9297,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "576:7:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9300,
                "mutability": "mutable",
                "name": "totalWithdrawals",
                "nameLocation": "617:16:33",
                "nodeType": "VariableDeclaration",
                "scope": 9301,
                "src": "609:24:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9299,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "609:7:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stats",
            "nameLocation": "462:5:33",
            "nodeType": "StructDefinition",
            "scope": 9355,
            "src": "455:186:33",
            "visibility": "public"
          },
          {
            "canonicalName": "IWittyPixelsTokenVault.Status",
            "id": 9306,
            "members": [
              {
                "id": 9302,
                "name": "Awaiting",
                "nameLocation": "680:8:33",
                "nodeType": "EnumValue",
                "src": "680:8:33"
              },
              {
                "id": 9303,
                "name": "Randomizing",
                "nameLocation": "707:11:33",
                "nodeType": "EnumValue",
                "src": "707:11:33"
              },
              {
                "id": 9304,
                "name": "Auctioning",
                "nameLocation": "737:10:33",
                "nodeType": "EnumValue",
                "src": "737:10:33"
              },
              {
                "id": 9305,
                "name": "Sold",
                "nameLocation": "766:4:33",
                "nodeType": "EnumValue",
                "src": "766:4:33"
              }
            ],
            "name": "Status",
            "nameLocation": "654:6:33",
            "nodeType": "EnumDefinition",
            "src": "649:128:33"
          },
          {
            "documentation": {
              "id": 9307,
              "nodeType": "StructuredDocumentation",
              "src": "785:606:33",
              "text": "@notice Returns status data about the token vault contract, relevant from an UI/UX perspective\n @return status Enum value representing current contract status: Awaiting, Randomizing, Auctioning, Sold\n @return stats Set of meters reflecting number of pixels, players, ERC20 transfers and withdrawls, up to date. \n @return currentPrice Price in ETH/wei at which the whole NFT ownership can be bought, or at which it was actually sold.\n @return nextPriceBlock A block number in the future at which the currentPrice may change. Zero, if it's not expected ever to change.    "
            },
            "functionSelector": "5a9b0b89",
            "id": 9320,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInfo",
            "nameLocation": "1406:7:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1413:2:33"
            },
            "returnParameters": {
              "id": 9319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9311,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1469:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9320,
                  "src": "1461:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$9306",
                    "typeString": "enum IWittyPixelsTokenVault.Status"
                  },
                  "typeName": {
                    "id": 9310,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9309,
                      "name": "Status",
                      "nameLocations": [
                        "1461:6:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9306,
                      "src": "1461:6:33"
                    },
                    "referencedDeclaration": 9306,
                    "src": "1461:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9306",
                      "typeString": "enum IWittyPixelsTokenVault.Status"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9314,
                  "mutability": "mutable",
                  "name": "stats",
                  "nameLocation": "1503:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9320,
                  "src": "1490:18:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stats_$9301_memory_ptr",
                    "typeString": "struct IWittyPixelsTokenVault.Stats"
                  },
                  "typeName": {
                    "id": 9313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9312,
                      "name": "Stats",
                      "nameLocations": [
                        "1490:5:33"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9301,
                      "src": "1490:5:33"
                    },
                    "referencedDeclaration": 9301,
                    "src": "1490:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$9301_storage_ptr",
                      "typeString": "struct IWittyPixelsTokenVault.Stats"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9316,
                  "mutability": "mutable",
                  "name": "currentPrice",
                  "nameLocation": "1531:12:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9320,
                  "src": "1523:20:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9318,
                  "mutability": "mutable",
                  "name": "nextPriceBlock",
                  "nameLocation": "1566:14:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9320,
                  "src": "1558:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1446:145:33"
            },
            "scope": 9355,
            "src": "1397:195:33",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9321,
              "nodeType": "StructuredDocumentation",
              "src": "1600:296:33",
              "text": "@notice Gets info regarding a formerly verified player, given its index. \n @return playerAddress Address from which the token's ownership was redeemed. Zero if this player has redeemed ownership yet.\n @return redeemedPixels Number of pixels formerly redemeed by given player. "
            },
            "functionSelector": "ea17532e",
            "id": 9330,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayerInfo",
            "nameLocation": "1911:13:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9330,
                  "src": "1925:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1925:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1924:9:33"
            },
            "returnParameters": {
              "id": 9329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9326,
                  "mutability": "mutable",
                  "name": "playerAddress",
                  "nameLocation": "1987:13:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9330,
                  "src": "1979:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9328,
                  "mutability": "mutable",
                  "name": "redeemedPixels",
                  "nameLocation": "2023:14:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9330,
                  "src": "2015:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1964:84:33"
            },
            "scope": 9355,
            "src": "1902:147:33",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9331,
              "nodeType": "StructuredDocumentation",
              "src": "2057:274:33",
              "text": "@notice Gets accounting info regarding given address.\n @return sharePercentage100 NFT ownership percentage based on current ERC20 balance, multiplied by a 100.\n @return withdrawableFunds ETH/wei amount that can be potentially withdrawn from this address."
            },
            "functionSelector": "7d5c1914",
            "id": 9340,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWalletInfo",
            "nameLocation": "2346:13:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9340,
                  "src": "2360:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2359:9:33"
            },
            "returnParameters": {
              "id": 9339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9336,
                  "mutability": "mutable",
                  "name": "sharePercentage100",
                  "nameLocation": "2422:18:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9340,
                  "src": "2414:26:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 9335,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9338,
                  "mutability": "mutable",
                  "name": "withdrawableFunds",
                  "nameLocation": "2463:17:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 9340,
                  "src": "2455:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2455:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2399:92:33"
            },
            "scope": 9355,
            "src": "2337:155:33",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9341,
              "nodeType": "StructuredDocumentation",
              "src": "2500:481:33",
              "text": "@notice Returns sum of finalized pixels ever redeemed from the given address.\n @dev Finalized pixels can only be redeemed by actual players of the WittyPixels game during the event to which \n @dev the `parentTokenId` is referred to. A value greater than 0 implies the given address was actually used by a \n @dev legitimate player when redeeming ownership of the fractionalized `parentTokenId` token within the `parentToken`\n @dev NFT collection."
            },
            "functionSelector": "2f294f9d",
            "id": 9348,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pixelsOf",
            "nameLocation": "2996:8:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9348,
                  "src": "3005:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3004:9:33"
            },
            "returnParameters": {
              "id": 9347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9346,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9348,
                  "src": "3045:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3045:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3044:9:33"
            },
            "scope": 9355,
            "src": "2987:67:33",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9349,
              "nodeType": "StructuredDocumentation",
              "src": "3062:83:33",
              "text": "@notice Returns total number of finalized pixels within the WittyPixels canvas."
            },
            "functionSelector": "594d7c48",
            "id": 9354,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalPixels",
            "nameLocation": "3160:11:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3171:2:33"
            },
            "returnParameters": {
              "id": 9353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9352,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9354,
                  "src": "3205:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3204:9:33"
            },
            "scope": 9355,
            "src": "3151:63:33",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 9356,
        "src": "197:3023:33",
        "usedErrors": []
      }
    ],
    "src": "33:3187:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-01-24T11:11:12.788Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "getInfo()": {
        "returns": {
          "currentPrice": "Price in ETH/wei at which the whole NFT ownership can be bought, or at which it was actually sold.",
          "nextPriceBlock": "A block number in the future at which the currentPrice may change. Zero, if it's not expected ever to change.    ",
          "stats": "Set of meters reflecting number of pixels, players, ERC20 transfers and withdrawls, up to date. ",
          "status": "Enum value representing current contract status: Awaiting, Randomizing, Auctioning, Sold"
        }
      },
      "getPlayerInfo(uint256)": {
        "returns": {
          "playerAddress": "Address from which the token's ownership was redeemed. Zero if this player has redeemed ownership yet.",
          "redeemedPixels": "Number of pixels formerly redemeed by given player. "
        }
      },
      "getWalletInfo(address)": {
        "returns": {
          "sharePercentage100": "NFT ownership percentage based on current ERC20 balance, multiplied by a 100.",
          "withdrawableFunds": "ETH/wei amount that can be potentially withdrawn from this address."
        }
      },
      "parentToken()": {
        "details": "Note: the ERC-165 identifier for this interface is 0x5755c3f2."
      },
      "pixelsOf(address)": {
        "details": "Finalized pixels can only be redeemed by actual players of the WittyPixels game during the event to which the `parentTokenId` is referred to. A value greater than 0 implies the given address was actually used by a legitimate player when redeeming ownership of the fractionalized `parentTokenId` token within the `parentToken`NFT collection."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "withdraw()": {
        "details": "Fails if not yet sold out. "
      },
      "withdrawableFrom(address)": {
        "details": "Returns 0 in all cases while not yet sold out. "
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "curator()": {
        "notice": "Address of the previous owner, the one that decided to fractionalized the NFT."
      },
      "getInfo()": {
        "notice": "Returns status data about the token vault contract, relevant from an UI/UX perspective"
      },
      "getPlayerInfo(uint256)": {
        "notice": "Gets info regarding a formerly verified player, given its index. "
      },
      "getWalletInfo(address)": {
        "notice": "Gets accounting info regarding given address."
      },
      "pixelsOf(address)": {
        "notice": "Returns sum of finalized pixels ever redeemed from the given address."
      },
      "redeem(bytes)": {
        "notice": "Mint ERC-20 tokens, ergo token ownership, by providing ownership deeds."
      },
      "soldOut()": {
        "notice": "Returns whether this NFT vault has already been sold out. "
      },
      "totalPixels()": {
        "notice": "Returns total number of finalized pixels within the WittyPixels canvas."
      },
      "withdraw()": {
        "notice": "Withdraw paid value in proportion to number of shares."
      },
      "withdrawableFrom(address)": {
        "notice": "Tells withdrawable amount in weis from given address."
      }
    },
    "version": 1
  }
}